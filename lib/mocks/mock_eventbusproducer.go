// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/furan/lib/kafka (interfaces: EventBusProducer)

package mocks

import (
	lib "github.com/dollarshaveclub/furan/generated/lib"
	gomock "github.com/golang/mock/gomock"
)

// Mock of EventBusProducer interface
type MockEventBusProducer struct {
	ctrl     *gomock.Controller
	recorder *_MockEventBusProducerRecorder
}

// Recorder for MockEventBusProducer (not exported)
type _MockEventBusProducerRecorder struct {
	mock *MockEventBusProducer
}

func NewMockEventBusProducer(ctrl *gomock.Controller) *MockEventBusProducer {
	mock := &MockEventBusProducer{ctrl: ctrl}
	mock.recorder = &_MockEventBusProducerRecorder{mock}
	return mock
}

func (_m *MockEventBusProducer) EXPECT() *_MockEventBusProducerRecorder {
	return _m.recorder
}

func (_m *MockEventBusProducer) PublishEvent(_param0 *lib.BuildEvent) error {
	ret := _m.ctrl.Call(_m, "PublishEvent", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockEventBusProducerRecorder) PublishEvent(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PublishEvent", arg0)
}
