// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/furan/lib/consul (interfaces: ConsulKV)

package mocks

import (
	api "github.com/hashicorp/consul/api"
	gomock "github.com/golang/mock/gomock"
)

// Mock of ConsulKV interface
type MockConsulKV struct {
	ctrl     *gomock.Controller
	recorder *_MockConsulKVRecorder
}

// Recorder for MockConsulKV (not exported)
type _MockConsulKVRecorder struct {
	mock *MockConsulKV
}

func NewMockConsulKV(ctrl *gomock.Controller) *MockConsulKV {
	mock := &MockConsulKV{ctrl: ctrl}
	mock.recorder = &_MockConsulKVRecorder{mock}
	return mock
}

func (_m *MockConsulKV) EXPECT() *_MockConsulKVRecorder {
	return _m.recorder
}

func (_m *MockConsulKV) Delete(_param0 string, _param1 *api.WriteOptions) (*api.WriteMeta, error) {
	ret := _m.ctrl.Call(_m, "Delete", _param0, _param1)
	ret0, _ := ret[0].(*api.WriteMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockConsulKVRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0, arg1)
}

func (_m *MockConsulKV) Get(_param0 string, _param1 *api.QueryOptions) (*api.KVPair, *api.QueryMeta, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0, _param1)
	ret0, _ := ret[0].(*api.KVPair)
	ret1, _ := ret[1].(*api.QueryMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockConsulKVRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1)
}

func (_m *MockConsulKV) Keys(_param0 string, _param1 string, _param2 *api.QueryOptions) ([]string, *api.QueryMeta, error) {
	ret := _m.ctrl.Call(_m, "Keys", _param0, _param1, _param2)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(*api.QueryMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockConsulKVRecorder) Keys(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Keys", arg0, arg1, arg2)
}

func (_m *MockConsulKV) Put(_param0 *api.KVPair, _param1 *api.WriteOptions) (*api.WriteMeta, error) {
	ret := _m.ctrl.Call(_m, "Put", _param0, _param1)
	ret0, _ := ret[0].(*api.WriteMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockConsulKVRecorder) Put(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Put", arg0, arg1)
}
