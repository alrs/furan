// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/furan/lib/github_fetch (interfaces: CodeFetcher)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
)

// Mock of CodeFetcher interface
type MockCodeFetcher struct {
	ctrl     *gomock.Controller
	recorder *_MockCodeFetcherRecorder
}

// Recorder for MockCodeFetcher (not exported)
type _MockCodeFetcherRecorder struct {
	mock *MockCodeFetcher
}

func NewMockCodeFetcher(ctrl *gomock.Controller) *MockCodeFetcher {
	mock := &MockCodeFetcher{ctrl: ctrl}
	mock.recorder = &_MockCodeFetcherRecorder{mock}
	return mock
}

func (_m *MockCodeFetcher) EXPECT() *_MockCodeFetcherRecorder {
	return _m.recorder
}

func (_m *MockCodeFetcher) Get(_param0 string, _param1 string, _param2 string) (io.Reader, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0, _param1, _param2)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCodeFetcherRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1, arg2)
}

func (_m *MockCodeFetcher) GetCommitSHA(_param0 string, _param1 string, _param2 string) (string, error) {
	ret := _m.ctrl.Call(_m, "GetCommitSHA", _param0, _param1, _param2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCodeFetcherRecorder) GetCommitSHA(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCommitSHA", arg0, arg1, arg2)
}
