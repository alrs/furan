// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/furan/lib/datalayer (interfaces: DataLayer)

package mocks

import (
	lib "github.com/dollarshaveclub/furan/generated/lib"
	gocql "github.com/gocql/gocql"
	gomock "github.com/golang/mock/gomock"
	go_agent "github.com/newrelic/go-agent"
)

// Mock of DataLayer interface
type MockDataLayer struct {
	ctrl     *gomock.Controller
	recorder *_MockDataLayerRecorder
}

// Recorder for MockDataLayer (not exported)
type _MockDataLayerRecorder struct {
	mock *MockDataLayer
}

func NewMockDataLayer(ctrl *gomock.Controller) *MockDataLayer {
	mock := &MockDataLayer{ctrl: ctrl}
	mock.recorder = &_MockDataLayerRecorder{mock}
	return mock
}

func (_m *MockDataLayer) EXPECT() *_MockDataLayerRecorder {
	return _m.recorder
}

func (_m *MockDataLayer) CreateBuild(_param0 go_agent.Transaction, _param1 *lib.BuildRequest) (gocql.UUID, error) {
	ret := _m.ctrl.Call(_m, "CreateBuild", _param0, _param1)
	ret0, _ := ret[0].(gocql.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataLayerRecorder) CreateBuild(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateBuild", arg0, arg1)
}

func (_m *MockDataLayer) DeleteBuild(_param0 go_agent.Transaction, _param1 gocql.UUID) error {
	ret := _m.ctrl.Call(_m, "DeleteBuild", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) DeleteBuild(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteBuild", arg0, arg1)
}

func (_m *MockDataLayer) GetBuildByID(_param0 go_agent.Transaction, _param1 gocql.UUID) (*lib.BuildStatusResponse, error) {
	ret := _m.ctrl.Call(_m, "GetBuildByID", _param0, _param1)
	ret0, _ := ret[0].(*lib.BuildStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataLayerRecorder) GetBuildByID(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBuildByID", arg0, arg1)
}

func (_m *MockDataLayer) GetBuildOutput(_param0 go_agent.Transaction, _param1 gocql.UUID, _param2 string) ([]lib.BuildEvent, error) {
	ret := _m.ctrl.Call(_m, "GetBuildOutput", _param0, _param1, _param2)
	ret0, _ := ret[0].([]lib.BuildEvent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataLayerRecorder) GetBuildOutput(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBuildOutput", arg0, arg1, arg2)
}

func (_m *MockDataLayer) SaveBuildOutput(_param0 go_agent.Transaction, _param1 gocql.UUID, _param2 []lib.BuildEvent, _param3 string) error {
	ret := _m.ctrl.Call(_m, "SaveBuildOutput", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) SaveBuildOutput(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SaveBuildOutput", arg0, arg1, arg2, arg3)
}

func (_m *MockDataLayer) SetBuildCompletedTimestamp(_param0 go_agent.Transaction, _param1 gocql.UUID) error {
	ret := _m.ctrl.Call(_m, "SetBuildCompletedTimestamp", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) SetBuildCompletedTimestamp(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetBuildCompletedTimestamp", arg0, arg1)
}

func (_m *MockDataLayer) SetBuildFlags(_param0 go_agent.Transaction, _param1 gocql.UUID, _param2 map[string]bool) error {
	ret := _m.ctrl.Call(_m, "SetBuildFlags", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) SetBuildFlags(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetBuildFlags", arg0, arg1, arg2)
}

func (_m *MockDataLayer) SetBuildState(_param0 go_agent.Transaction, _param1 gocql.UUID, _param2 lib.BuildStatusResponse_BuildState) error {
	ret := _m.ctrl.Call(_m, "SetBuildState", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) SetBuildState(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetBuildState", arg0, arg1, arg2)
}

func (_m *MockDataLayer) SetBuildTimeMetric(_param0 go_agent.Transaction, _param1 gocql.UUID, _param2 string) error {
	ret := _m.ctrl.Call(_m, "SetBuildTimeMetric", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) SetBuildTimeMetric(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetBuildTimeMetric", arg0, arg1, arg2)
}

func (_m *MockDataLayer) SetDockerImageSizesMetric(_param0 go_agent.Transaction, _param1 gocql.UUID, _param2 int64, _param3 int64) error {
	ret := _m.ctrl.Call(_m, "SetDockerImageSizesMetric", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataLayerRecorder) SetDockerImageSizesMetric(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetDockerImageSizesMetric", arg0, arg1, arg2, arg3)
}
