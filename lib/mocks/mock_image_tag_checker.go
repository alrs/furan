// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/furan/lib/tagcheck (interfaces: ImageTagChecker)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of ImageTagChecker interface
type MockImageTagChecker struct {
	ctrl     *gomock.Controller
	recorder *_MockImageTagCheckerRecorder
}

// Recorder for MockImageTagChecker (not exported)
type _MockImageTagCheckerRecorder struct {
	mock *MockImageTagChecker
}

func NewMockImageTagChecker(ctrl *gomock.Controller) *MockImageTagChecker {
	mock := &MockImageTagChecker{ctrl: ctrl}
	mock.recorder = &_MockImageTagCheckerRecorder{mock}
	return mock
}

func (_m *MockImageTagChecker) EXPECT() *_MockImageTagCheckerRecorder {
	return _m.recorder
}

func (_m *MockImageTagChecker) AllTagsExist(_param0 []string, _param1 string) (bool, []string, error) {
	ret := _m.ctrl.Call(_m, "AllTagsExist", _param0, _param1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockImageTagCheckerRecorder) AllTagsExist(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AllTagsExist", arg0, arg1)
}
