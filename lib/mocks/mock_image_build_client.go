// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/dollarshaveclub/furan/lib/builder (interfaces: ImageBuildClient)

package mocks

import (
	types "github.com/docker/engine-api/types"
	context "golang.org/x/net/context"
	gomock "github.com/golang/mock/gomock"
	io "io"
)

// Mock of ImageBuildClient interface
type MockImageBuildClient struct {
	ctrl     *gomock.Controller
	recorder *_MockImageBuildClientRecorder
}

// Recorder for MockImageBuildClient (not exported)
type _MockImageBuildClientRecorder struct {
	mock *MockImageBuildClient
}

func NewMockImageBuildClient(ctrl *gomock.Controller) *MockImageBuildClient {
	mock := &MockImageBuildClient{ctrl: ctrl}
	mock.recorder = &_MockImageBuildClientRecorder{mock}
	return mock
}

func (_m *MockImageBuildClient) EXPECT() *_MockImageBuildClientRecorder {
	return _m.recorder
}

func (_m *MockImageBuildClient) ImageBuild(_param0 context.Context, _param1 io.Reader, _param2 types.ImageBuildOptions) (types.ImageBuildResponse, error) {
	ret := _m.ctrl.Call(_m, "ImageBuild", _param0, _param1, _param2)
	ret0, _ := ret[0].(types.ImageBuildResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockImageBuildClientRecorder) ImageBuild(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImageBuild", arg0, arg1, arg2)
}

func (_m *MockImageBuildClient) ImageInspectWithRaw(_param0 context.Context, _param1 string) (types.ImageInspect, []byte, error) {
	ret := _m.ctrl.Call(_m, "ImageInspectWithRaw", _param0, _param1)
	ret0, _ := ret[0].(types.ImageInspect)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockImageBuildClientRecorder) ImageInspectWithRaw(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImageInspectWithRaw", arg0, arg1)
}

func (_m *MockImageBuildClient) ImageList(_param0 context.Context, _param1 types.ImageListOptions) ([]types.Image, error) {
	ret := _m.ctrl.Call(_m, "ImageList", _param0, _param1)
	ret0, _ := ret[0].([]types.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockImageBuildClientRecorder) ImageList(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImageList", arg0, arg1)
}

func (_m *MockImageBuildClient) ImagePush(_param0 context.Context, _param1 string, _param2 types.ImagePushOptions) (io.ReadCloser, error) {
	ret := _m.ctrl.Call(_m, "ImagePush", _param0, _param1, _param2)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockImageBuildClientRecorder) ImagePush(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImagePush", arg0, arg1, arg2)
}

func (_m *MockImageBuildClient) ImageRemove(_param0 context.Context, _param1 string, _param2 types.ImageRemoveOptions) ([]types.ImageDelete, error) {
	ret := _m.ctrl.Call(_m, "ImageRemove", _param0, _param1, _param2)
	ret0, _ := ret[0].([]types.ImageDelete)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockImageBuildClientRecorder) ImageRemove(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImageRemove", arg0, arg1, arg2)
}

func (_m *MockImageBuildClient) ImageSave(_param0 context.Context, _param1 []string) (io.ReadCloser, error) {
	ret := _m.ctrl.Call(_m, "ImageSave", _param0, _param1)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockImageBuildClientRecorder) ImageSave(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImageSave", arg0, arg1)
}
